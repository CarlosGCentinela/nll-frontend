{
  "details": [
    {
      "project_description": "This is a project description"
    },
    {
      "main_technologies": "node.js, Angular v18 (Standalone), Material Angular v18"
    }
  ],
  "structure": [
    {
      "path": ".editorconfig"
    },
    {
      "path": ".gitignore"
    },
    {
      "path": "README.md"
    },
    {
      "path": "angular.json"
    },
    {
      "path": "package.json"
    },
    {
      "path": "src/",
      "contents": [
        {
          "path": "src/app/",
          "contents": [
            {
              "path": "src/app/Core/",
              "contents": [
                {
                  "path": "src/app/Core/Components/",
                  "contents": [
                    {
                      "path": "src/app/Core/Components/article-card/",
                      "contents": [
                        {
                          "path": "src/app/Core/Components/article-card/article-card.component.html"
                        },
                        {
                          "path": "src/app/Core/Components/article-card/article-card.component.scss"
                        },
                        {
                          "path": "src/app/Core/Components/article-card/article-card.component.spec.ts"
                        },
                        {
                          "path": "src/app/Core/Components/article-card/article-card.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Components/carousel/",
                      "contents": [
                        {
                          "path": "src/app/Core/Components/carousel/carousel.component.html"
                        },
                        {
                          "path": "src/app/Core/Components/carousel/carousel.component.scss"
                        },
                        {
                          "path": "src/app/Core/Components/carousel/carousel.component.spec.ts"
                        },
                        {
                          "path": "src/app/Core/Components/carousel/carousel.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Components/navbar/",
                      "contents": [
                        {
                          "path": "src/app/Core/Components/navbar/navbar.component.html"
                        },
                        {
                          "path": "src/app/Core/Components/navbar/navbar.component.scss"
                        },
                        {
                          "path": "src/app/Core/Components/navbar/navbar.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Components/sidebar/",
                      "contents": [
                        {
                          "path": "src/app/Core/Components/sidebar/sidebar.component.html"
                        },
                        {
                          "path": "src/app/Core/Components/sidebar/sidebar.component.scss"
                        },
                        {
                          "path": "src/app/Core/Components/sidebar/sidebar.component.ts"
                        }
                      ]
                    }
                  ]
                },
                {
                  "path": "src/app/Core/Models/",
                  "contents": [
                    {
                      "path": "src/app/Core/Models/slide.model.ts"
                    }
                  ]
                },
                {
                  "path": "src/app/Core/Pages/",
                  "contents": [
                    {
                      "path": "src/app/Core/Pages/buscador/",
                      "contents": [
                        {
                          "path": "src/app/Core/Pages/buscador/buscador.component.html"
                        },
                        {
                          "path": "src/app/Core/Pages/buscador/buscador.component.scss"
                        },
                        {
                          "path": "src/app/Core/Pages/buscador/buscador.component.spec.ts"
                        },
                        {
                          "path": "src/app/Core/Pages/buscador/buscador.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Pages/buscador-detalle/",
                      "contents": [
                        {
                          "path": "src/app/Core/Pages/buscador-detalle/buscador-detalle.component.html"
                        },
                        {
                          "path": "src/app/Core/Pages/buscador-detalle/buscador-detalle.component.scss"
                        },
                        {
                          "path": "src/app/Core/Pages/buscador-detalle/buscador-detalle.component.spec.ts"
                        },
                        {
                          "path": "src/app/Core/Pages/buscador-detalle/buscador-detalle.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Pages/home/",
                      "contents": [
                        {
                          "path": "src/app/Core/Pages/home/home.component.html"
                        },
                        {
                          "path": "src/app/Core/Pages/home/home.component.scss"
                        },
                        {
                          "path": "src/app/Core/Pages/home/home.component.spec.ts"
                        },
                        {
                          "path": "src/app/Core/Pages/home/home.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Pages/landingPage/",
                      "contents": [
                        {
                          "path": "src/app/Core/Pages/landingPage/landingPage.component.html"
                        },
                        {
                          "path": "src/app/Core/Pages/landingPage/landingPage.component.scss"
                        },
                        {
                          "path": "src/app/Core/Pages/landingPage/landingPage.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Pages/login/",
                      "contents": [
                        {
                          "path": "src/app/Core/Pages/login/login.component.html"
                        },
                        {
                          "path": "src/app/Core/Pages/login/login.component.scss"
                        },
                        {
                          "path": "src/app/Core/Pages/login/login.component.spec.ts"
                        },
                        {
                          "path": "src/app/Core/Pages/login/login.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Pages/modelo/",
                      "contents": [
                        {
                          "path": "src/app/Core/Pages/modelo/modelo.component.html"
                        },
                        {
                          "path": "src/app/Core/Pages/modelo/modelo.component.scss"
                        },
                        {
                          "path": "src/app/Core/Pages/modelo/modelo.component.spec.ts"
                        },
                        {
                          "path": "src/app/Core/Pages/modelo/modelo.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Pages/quienesSomos/",
                      "contents": [
                        {
                          "path": "src/app/Core/Pages/quienesSomos/quienesSomos.component.html"
                        },
                        {
                          "path": "src/app/Core/Pages/quienesSomos/quienesSomos.component.scss"
                        },
                        {
                          "path": "src/app/Core/Pages/quienesSomos/quienesSomos.component.ts"
                        }
                      ]
                    },
                    {
                      "path": "src/app/Core/Pages/registro/",
                      "contents": [
                        {
                          "path": "src/app/Core/Pages/registro/registro.component.html"
                        },
                        {
                          "path": "src/app/Core/Pages/registro/registro.component.scss"
                        },
                        {
                          "path": "src/app/Core/Pages/registro/registro.component.spec.ts"
                        },
                        {
                          "path": "src/app/Core/Pages/registro/registro.component.ts"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "path": "src/app/Services/",
              "contents": [
                {
                  "path": "src/app/Services/general.service.spec.ts"
                },
                {
                  "path": "src/app/Services/general.service.ts"
                },
                {
                  "path": "src/app/Services/sidebar.service.ts/",
                  "contents": [
                    {
                      "path": "src/app/Services/sidebar.service.ts/sidebar.service.ts"
                    }
                  ]
                }
              ]
            },
            {
              "path": "src/app/app.component.html"
            },
            {
              "path": "src/app/app.component.scss"
            },
            {
              "path": "src/app/app.component.ts"
            },
            {
              "path": "src/app/app.config.ts"
            },
            {
              "path": "src/app/app.routes.ts"
            }
          ]
        },
        {
          "path": "src/index.html"
        },
        {
          "path": "src/main.ts"
        },
        {
          "path": "src/styles.scss"
        }
      ]
    },
    {
      "path": "tsconfig.app.json"
    },
    {
      "path": "tsconfig.json"
    },
    {
      "path": "tsconfig.spec.json"
    }
  ],
  "excluded": {
    "directories": [
      ".angular/",
      ".git/",
      ".vscode/",
      "node_modules/",
      "public/"
    ],
    "files": [
      ".env",
      "package-lock.json",
      "project_files.json"
    ]
  },
  "filesContent": [
    {
      "path": ".editorconfig",
      "content": "# Editor configuration, see https://editorconfig.org root = true [*] charset = utf-8 indent_style = space indent_size = 2 insert_final_newline = true trim_trailing_whitespace = true [*.ts] quote_type = single [*.md] max_line_length = off trim_trailing_whitespace = false "
    },
    {
      "path": ".gitignore",
      "content": "# See https://docs.github.com/get-started/getting-started-with-git/ignoring-files for more about ignoring files. # Compiled output /dist /tmp /out-tsc /bazel-out # Node /node_modules npm-debug.log yarn-error.log # IDEs and editors .idea/ .project .classpath .c9/ *.launch .settings/ *.sublime-workspace # Visual Studio Code .vscode/* !.vscode/settings.json !.vscode/tasks.json !.vscode/launch.json !.vscode/extensions.json .history/* # Miscellaneous /.angular/cache .sass-cache/ /connect.lock /coverage /libpeerconnection.log testem.log /typings proyecy_files.json # System files .DS_Store Thumbs.db "
    },
    {
      "path": "README.md",
      "content": "# NllFrontend This project was generated with [Angular CLI](https://github.com/angular/angular-cli) version 18.2.5. ## Development server Run `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The application will automatically reload if you change any of the source files. ## Code scaffolding Run `ng generate component component-name` to generate a new component. You can also use `ng generate directive|pipe|service|class|guard|interface|enum|module`. ## Build Run `ng build` to build the project. The build artifacts will be stored in the `dist/` directory. ## Running unit tests Run `ng test` to execute the unit tests via [Karma](https://karma-runner.github.io). ## Running end-to-end tests Run `ng e2e` to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities. ## Further help To get more help on the Angular CLI use `ng help` or go check out the [Angular CLI Overview and Command Reference](https://angular.dev/tools/cli) page. "
    },
    {
      "path": "angular.json",
      "content": "{ \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\", \"version\": 1, \"newProjectRoot\": \"projects\", \"projects\": { \"nll-frontend\": { \"projectType\": \"application\", \"schematics\": { \"@schematics/angular:component\": { \"style\": \"scss\" } }, \"root\": \"\", \"sourceRoot\": \"src\", \"prefix\": \"app\", \"architect\": { \"build\": { \"builder\": \"@angular-devkit/build-angular:application\", \"options\": { \"outputPath\": \"dist/nll-frontend\", \"index\": \"src/index.html\", \"browser\": \"src/main.ts\", \"polyfills\": [ \"zone.js\" ], \"tsConfig\": \"tsconfig.app.json\", \"inlineStyleLanguage\": \"scss\", \"assets\": [ { \"glob\": \"**/*\", \"input\": \"public\" } ], \"styles\": [ \"@angular/material/prebuilt-themes/azure-blue.css\", \"src/styles.scss\" ], \"scripts\": [] }, \"configurations\": { \"production\": { \"budgets\": [ { \"type\": \"initial\", \"maximumWarning\": \"500kB\", \"maximumError\": \"1MB\" }, { \"type\": \"anyComponentStyle\", \"maximumWarning\": \"2kB\", \"maximumError\": \"4kB\" } ], \"outputHashing\": \"all\" }, \"development\": { \"optimization\": false, \"extractLicenses\": false, \"sourceMap\": true } }, \"defaultConfiguration\": \"production\" }, \"serve\": { \"builder\": \"@angular-devkit/build-angular:dev-server\", \"configurations\": { \"production\": { \"buildTarget\": \"nll-frontend:build:production\" }, \"development\": { \"buildTarget\": \"nll-frontend:build:development\" } }, \"defaultConfiguration\": \"development\" }, \"extract-i18n\": { \"builder\": \"@angular-devkit/build-angular:extract-i18n\" }, \"test\": { \"builder\": \"@angular-devkit/build-angular:karma\", \"options\": { \"polyfills\": [ \"zone.js\", \"zone.js/testing\" ], \"tsConfig\": \"tsconfig.spec.json\", \"inlineStyleLanguage\": \"scss\", \"assets\": [ { \"glob\": \"**/*\", \"input\": \"public\" } ], \"styles\": [ \"@angular/material/prebuilt-themes/azure-blue.css\", \"src/styles.scss\" ], \"scripts\": [] } } } } } } "
    },
    {
      "path": "package.json",
      "content": "{ \"name\": \"nll-frontend\", \"version\": \"0.0.0\", \"scripts\": { \"ng\": \"ng\", \"start\": \"ng serve\", \"build\": \"ng build\", \"watch\": \"ng build --watch --configuration development\", \"test\": \"ng test\", \"scan\": \"node node_modules/vmvv/lib/project_files.js\" }, \"private\": true, \"dependencies\": { \"@angular/animations\": \"^18.2.0\", \"@angular/cdk\": \"^18.2.8\", \"@angular/common\": \"^18.2.0\", \"@angular/compiler\": \"^18.2.0\", \"@angular/core\": \"^18.2.0\", \"@angular/forms\": \"^18.2.0\", \"@angular/material\": \"^18.2.8\", \"@angular/platform-browser\": \"^18.2.0\", \"@angular/platform-browser-dynamic\": \"^18.2.0\", \"@angular/router\": \"^18.2.0\", \"rxjs\": \"~7.8.0\", \"tslib\": \"^2.3.0\", \"vmvv\": \"^2.3.1\", \"zone.js\": \"~0.14.10\" }, \"devDependencies\": { \"@angular-devkit/build-angular\": \"^18.2.5\", \"@angular/cli\": \"^18.2.5\", \"@angular/compiler-cli\": \"^18.2.0\", \"@types/jasmine\": \"~5.1.0\", \"jasmine-core\": \"~5.2.0\", \"karma\": \"~6.4.0\", \"karma-chrome-launcher\": \"~3.2.0\", \"karma-coverage\": \"~2.2.0\", \"karma-jasmine\": \"~5.1.0\", \"karma-jasmine-html-reporter\": \"~2.1.0\", \"typescript\": \"~5.5.2\" } } "
    },
    {
      "path": "src/app/Core/Components/article-card/article-card.component.html",
      "content": "<mat-card class=\"article-card\"> <mat-card-header> <mat-card-title>{{ title }}</mat-card-title> </mat-card-header> <mat-card-content> <p>{{ description }}</p> </mat-card-content> </mat-card> "
    },
    {
      "path": "src/app/Core/Components/article-card/article-card.component.scss",
      "content": "/* src/app/components/article-card/article-card.component.scss */ .article-card { background-color: var(--background-color); /* Uso correcto de CSS Variable */ color: var(--primary-color); /* Uso correcto de CSS Variable */ border-radius: 8px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); transition: transform 0.3s, box-shadow 0.3s; margin: 10px; &:hover { transform: translateY(-5px); box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2); } mat-card-title { font-size: 1.5em; font-weight: bold; } p { font-size: 1em; line-height: 1.5; } } /* Responsividad */ @media (max-width: 768px) { .article-card { padding: 15px; mat-card-title { font-size: 1.3em; } p { font-size: 0.95em; } } } @media (max-width: 480px) { .article-card { padding: 10px; mat-card-title { font-size: 1.1em; } p { font-size: 0.9em; } } } "
    },
    {
      "path": "src/app/Core/Components/article-card/article-card.component.spec.ts",
      "content": "import { ComponentFixture, TestBed } from '@angular/core/testing'; import { ArticleCardComponent } from './article-card.component'; describe('ArticleCardComponent', () => { let component: ArticleCardComponent; let fixture: ComponentFixture<ArticleCardComponent>; beforeEach(async () => { await TestBed.configureTestingModule({ imports: [ArticleCardComponent] }) .compileComponents(); fixture = TestBed.createComponent(ArticleCardComponent); component = fixture.componentInstance; fixture.detectChanges(); }); it('should create', () => { expect(component).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Core/Components/article-card/article-card.component.ts",
      "content": "// src/app/components/article-card/article-card.component.ts import { Component, Input } from '@angular/core'; import { MatCardModule } from '@angular/material/card'; @Component({ selector: 'app-article-card', standalone: true, // Indica que es un componente standalone imports: [MatCardModule], // Importa módulos de Angular Material necesarios templateUrl: './article-card.component.html', styleUrls: ['./article-card.component.scss'] }) export class ArticleCardComponent { @Input() title: string = 'Título del Artículo'; @Input() description: string = 'Descripción del artículo...'; } "
    },
    {
      "path": "src/app/Core/Components/carousel/carousel.component.html",
      "content": "<!-- src/app/Core/Components/carousel/carousel.component.html --> <div class=\"carousel\" role=\"region\"> <div *ngFor=\"let slide of slides; let i = index\" class=\"slide\" [class.active]=\"i === currentIndex\" [@carouselAnimation]=\"i === currentIndex ? 'active' : 'inactive'\" role=\"group\"> <!-- Slide Regular: Imagen y Contenido --> <ng-container *ngIf=\"slide.type === 'regular'\"> <img *ngIf=\"slide.imageUrl\" [src]=\"slide.imageUrl\" alt=\"Slide Image\" loading=\"lazy\"> <div *ngIf=\"slide.content\" class=\"slide-content\" [innerHTML]=\"getSanitizedContent(slide.content)\"></div> </ng-container> <!-- Slide Personalizado 1 --> <ng-container *ngIf=\"slide.type === 'custom1'\"> <div class=\"logo-container\"> <h6>\"Impulsa tus proyectos con financiamiento inteligente\"</h6> <div class=\"logo\">Logo Proyecto A</div> <div class=\"logo\">Logo Proyecto B</div> <div class=\"logo\">Logo Proyecto C</div> <div class=\"logo\">Logo Proyecto D</div> </div> </ng-container> <!-- Slide Personalizado 2 --> <ng-container *ngIf=\"slide.type === 'custom2'\"> <div class=\"special-content\"> <h2>Especial Slide</h2> <p>Este es un slide personalizado con contenido único.</p> <button>¡Haz Click!</button> </div> </ng-container> </div> <!-- Botones de Navegación --> <button *ngIf=\"showArrows\" class=\"arrow left\" (click)=\"prevSlide()\" aria-label=\"Anterior\">&lt;</button> <button *ngIf=\"showArrows\" class=\"arrow right\" (click)=\"nextSlide()\" aria-label=\"Siguiente\">&gt;</button> <!-- Indicadores --> <div *ngIf=\"showIndicators\" class=\"indicators\"> <span *ngFor=\"let slide of slides; let i = index\" [class.active]=\"i === currentIndex\" (click)=\"goToSlide(i)\" role=\"button\" tabindex=\"0\"> </span> </div> </div> "
    },
    {
      "path": "src/app/Core/Components/carousel/carousel.component.scss",
      "content": "/* src/app/carousel/carousel.component.scss */ .carousel { position: relative; width: 100%; height: 65vh; overflow: hidden; background-color: rgba(0, 0, 0, 0.5); border-radius: 8px; } .slide { position: absolute; top: 0; left: 0; width: 100%; height: 100%; transition: opacity 0.5s ease-in-out; opacity: 0; } .slide.active { opacity: 1; } .slide img { width: 100%; height: 100%; object-fit: cover; } .slide-content { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; text-align: center; background-color: rgba(0, 0, 0, 0.5); /* Fondo semi-transparente */ padding: 20px; border-radius: 8px; } /* Botones de Navegación */ .arrow { position: absolute; top: 50%; transform: translateY(-50%); background-color: rgba(0, 0, 0, 0.5); color: white; border: none; padding: 10px 15px; font-size: 20px; cursor: pointer; transition: background-color 0.3s; z-index: 10; } .arrow:hover { background-color: rgba(0, 0, 0, 0.8); } .arrow.left { left: 10px; } .arrow.right { right: 10px; } /* Indicadores */ .indicators { position: absolute; bottom: 15px; width: 100%; text-align: center; } .indicators span { display: inline-block; width: 12px; height: 12px; margin: 0 5px; background-color: rgba(255, 255, 255, 0.5); border-radius: 50%; cursor: pointer; transition: background-color 0.3s; } .indicators span.active { background-color: rgba(255, 255, 255, 0.9); } /* Responsive Design */ @media (max-width: 768px) { .carousel { height: 500px; } .slide-content { max-width: 80%; padding: 10px; } .special-content { padding: 10px; h2 { font-size: 1.5em; } p { font-size: 1em; } button { padding: 8px 16px; font-size: 0.9em; } } .arrow { padding: 8px 12px; font-size: 18px; } } /* Estilos para slides personalizados */ .special-content { display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%; background-color: #e0f7fa; /* Fondo personalizado */ color: #006064; /* Texto personalizado */ padding: 20px; box-sizing: border-box; text-align: center; h2 { margin-bottom: 10px; } p { margin-bottom: 20px; } button { padding: 10px 20px; background-color: #006064; color: white; border: none; border-radius: 4px; cursor: pointer; transition: background-color 0.3s; &:hover { background-color: #004d40; } } } .logo-container { display: flex; flex-wrap: wrap; margin-top: 20px; align-items: center; height: 100%; gap: 24px; justify-content: center; h6{ color: white; text-align: center; background-color: rgba(0, 0, 0, 0.5); padding: 20px; border-radius: 8px; } .logo { width: 80px; height: 80px; background-color: #f1f1f1; display: flex; align-items: center; justify-content: center; margin: 10px; text-align: center; /* Reemplazado -webkit-center por center para mayor compatibilidad */ border-radius: 8px; /* Opcional: Añade bordes redondeados */ box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Opcional: Añade sombra ligera */ transition: transform 0.3s, box-shadow 0.3s; /* Opcional: Añade transiciones para efectos hover */ /* Efecto Hover (Opcional) */ &:hover { transform: scale(1.05); box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); } } /* Media Queries para Responsividad */ /* Tablet: max-width 768px */ @media (max-width: 768px) { gap: 16px; /* Reduce el espacio entre logos */ .logo { width: 70px; height: 70px; margin: 8px; } } /* Mobile: max-width 480px */ @media (max-width: 480px) { flex-direction: row; /* Apila los logos verticalmente */ gap: 12px; /* Reduce aún más el espacio entre logos */ margin-top: 15px; /* Ajusta el margen superior si es necesario */ .logo { width: 60px; height: 60px; margin: 6px; } } } "
    },
    {
      "path": "src/app/Core/Components/carousel/carousel.component.spec.ts",
      "content": "import { ComponentFixture, TestBed } from '@angular/core/testing'; import { CarouselComponent } from './carousel.component'; describe('CarouselComponent', () => { let component: CarouselComponent; let fixture: ComponentFixture<CarouselComponent>; beforeEach(async () => { await TestBed.configureTestingModule({ imports: [CarouselComponent] }) .compileComponents(); fixture = TestBed.createComponent(CarouselComponent); component = fixture.componentInstance; fixture.detectChanges(); }); it('should create', () => { expect(component).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Core/Components/carousel/carousel.component.ts",
      "content": "// src/app/carousel/carousel.component.ts import { Component, OnInit, OnDestroy, Input, HostListener, ViewEncapsulation } from '@angular/core'; import { CommonModule } from '@angular/common'; import { trigger, transition, style, animate } from '@angular/animations'; import { Slide } from '../../Models/slide.model'; import { DomSanitizer, SafeHtml } from '@angular/platform-browser'; @Component({ selector: 'app-carousel', standalone: true, imports: [CommonModule], templateUrl: './carousel.component.html', styleUrls: ['./carousel.component.scss'], encapsulation: ViewEncapsulation.Emulated, // Mantener la encapsulación por defecto animations: [ trigger('carouselAnimation', [ transition('inactive => active', [ style({ opacity: 0 }), animate('500ms', style({ opacity: 1 })) ]), transition('active => inactive', [ animate('500ms', style({ opacity: 0 })) ]) ]) ] }) export class CarouselComponent implements OnInit, OnDestroy { @Input() slides: Slide[] = []; // Nuevas propiedades de entrada para controlar la visualización @Input() showIndicators: boolean = true; @Input() showArrows: boolean = true; // Nueva propiedad de entrada para la duración predeterminada (opcional) @Input() defaultDuration: number = 5000; // 5000 ms por defecto currentIndex = 0; private timeoutId: any; constructor(private sanitizer: DomSanitizer) { } ngOnInit() { if (this.slides.length > 0) { this.startCarousel(); } } ngOnDestroy() { this.stopCarousel(); } // Escuchar eventos de teclado @HostListener('document:keydown.arrowLeft', ['$event']) onArrowLeft(event: KeyboardEvent) { this.prevSlide(); } @HostListener('document:keydown.arrowRight', ['$event']) onArrowRight(event: KeyboardEvent) { this.nextSlide(); } startCarousel() { const currentSlide = this.slides[this.currentIndex]; const duration = currentSlide.duration ?? this.defaultDuration; this.timeoutId = setTimeout(() => { this.nextSlide(); }, duration); } stopCarousel() { if (this.timeoutId) { clearTimeout(this.timeoutId); } } nextSlide() { this.currentIndex = (this.currentIndex + 1) % this.slides.length; this.resetCarouselTimer(); } prevSlide() { this.currentIndex = (this.currentIndex - 1 + this.slides.length) % this.slides.length; this.resetCarouselTimer(); } goToSlide(index: number) { this.currentIndex = index; this.resetCarouselTimer(); } resetCarouselTimer() { this.stopCarousel(); this.startCarousel(); } // Método para sanitizar el contenido HTML getSanitizedContent(content: string): SafeHtml { return this.sanitizer.bypassSecurityTrustHtml(content); } } "
    },
    {
      "path": "src/app/Core/Components/navbar/navbar.component.html",
      "content": "<nav> <li class=\"logo\" routerLink=\"/\" routerLinkActive=\"active\">NuevoLosLagos</li> <!-- Menú principal --> <ul class=\"main-menu\"> <li routerLink=\"/quienes-somos\" routerLinkActive=\"active\"> <mat-icon>info</mat-icon> <span>Quienes somos</span> </li> <li routerLink=\"/modelo\" routerLinkActive=\"active\"> <mat-icon>assessment</mat-icon> <span>Modelo de diagnóstico</span> </li> <li routerLink=\"/cursos\" routerLinkActive=\"active\"> <mat-icon>book</mat-icon> <span>Cursos</span> </li> <li routerLink=\"/proveedores\" routerLinkActive=\"active\"> <mat-icon>business</mat-icon> <span>Proveedores</span> </li> <li routerLink=\"/casos-exito\" routerLinkActive=\"active\"> <mat-icon>star</mat-icon> <span>Casos de Éxitos</span> </li> <li routerLink=\"/financiamiento-empleo\" routerLinkActive=\"active\"> <mat-icon>attach_money</mat-icon> <span>Financiamiento y Empleo</span> </li> <li routerLink=\"/articulos\" routerLinkActive=\"active\"> <mat-icon>article</mat-icon> <span>Artículos de interés</span> </li> </ul> <!-- Menú desplegable para pantallas pequeñas --> <div class=\"dropdown-menu\"> <button class=\"dropdown-toggle\" (click)=\"toggleDropdown()\"> <mat-icon>arrow_drop_down</mat-icon> </button> <ul *ngIf=\"isDropdownOpen\"> <li routerLink=\"/quienes-somos\" routerLinkActive=\"active\"> <mat-icon>info</mat-icon> <span>Quienes somos</span> </li> <li> <mat-icon>assessment</mat-icon> <span>Modelo de diagnóstico</span> </li> <li> <mat-icon>book</mat-icon> <span>Cursos</span> </li> <li> <mat-icon>business</mat-icon> <span>Proveedores</span> </li> <li> <mat-icon>star</mat-icon> <span>Casos de Éxitos</span> </li> <li> <mat-icon>attach_money</mat-icon> <span>Financiamiento y Empleo</span> </li> <li> <mat-icon>article</mat-icon> <span>Artículos de interés</span> </li> </ul> </div> <button class=\"menu-toggle\" (click)=\"onToggleSidebar()\"> <mat-icon>menu</mat-icon> </button> </nav> "
    },
    {
      "path": "src/app/Core/Components/navbar/navbar.component.scss",
      "content": "nav { display: flex; justify-content: space-between; align-items: center; padding: 10px 20px; background-color:transparent; color: white; position: relative; /* Agregar efecto de blur */ backdrop-filter: blur(30px); -webkit-backdrop-filter: blur(30px); /* Soporte para Safari */ background-color: #00000073; backdrop-filter: blur(20px); -webkit-backdrop-filter: blur(30px); box-shadow: 0 4px 6px rgb(0 0 0 / 30%); } .logo { font-weight: bold; } .main-menu { display: flex; list-style-type: none; margin: 0; padding: 0; } .main-menu li { display: flex; flex-direction: column; align-items: center; margin: 0 10px; cursor: pointer; } .main-menu mat-icon { font-size: 24px; } .main-menu span { font-size: 12px; margin-top: 4px; } /* Botón del menú desplegable para pantallas pequeñas */ .dropdown-menu { display: none; top: 60px; /* Ajusta según la altura de tu nav */ right: 20px; border-radius: 4px; } .dropdown-toggle { background-color: transparent; border: none; color: white; font-size: 24px; cursor: pointer; } .dropdown-menu ul { list-style-type: none; margin: 0; padding: 10px 0; } .dropdown-menu li { display: flex; align-items: center; padding: 10px 20px; cursor: pointer; } .dropdown-menu li mat-icon { margin-right: 10px; } .dropdown-menu li:hover { background-color: #555; } /* Botón de menú principal */ button.menu-toggle { background-color: transparent; border: none; color: white; padding: 10px; font-size: 24px; cursor: pointer; } /* Media Queries */ /* Pantallas medianas: Mostrar solo iconos */ @media (max-width: 1024px) and (min-width: 768px) { .main-menu span { display: none; } } /* Pantallas pequeñas: Mostrar menú desplegable y ocultar menú principal */ @media (max-width: 767px) { .main-menu { display: none; } .dropdown-menu { display: block; } } "
    },
    {
      "path": "src/app/Core/Components/navbar/navbar.component.ts",
      "content": "// src/app/Core/Components/navbar/navbar.component.ts import { Component } from '@angular/core'; import { MatIconModule } from '@angular/material/icon'; import { CommonModule } from '@angular/common'; import { RouterLink, RouterLinkActive } from '@angular/router'; import { SidebarService } from '../../../Services/sidebar.service.ts/sidebar.service'; // Asegúrate de que la ruta sea correcta @Component({ selector: 'app-navbar', standalone: true, templateUrl: './navbar.component.html', styleUrls: ['./navbar.component.scss'], imports: [CommonModule, MatIconModule, RouterLink, RouterLinkActive], }) export class NavbarComponent { isDropdownOpen = false; constructor(private sidebarService: SidebarService) {} toggleDropdown() { this.isDropdownOpen = !this.isDropdownOpen; } onToggleSidebar() { this.sidebarService.toggleSidebar(); } } "
    },
    {
      "path": "src/app/Core/Components/sidebar/sidebar.component.html",
      "content": "<div class=\"sidebar\" [class.open]=\"isOpen\"> <button class=\"close-btn\" (click)=\"onClose()\">×</button> <div class=\"container-lead\"> <button routerLink=\"/login\" routerLinkActive=\"active\">Ingresar</button> <button routerLink=\"/registro\" routerLinkActive=\"active\">Registrar</button> </div> </div>"
    },
    {
      "path": "src/app/Core/Components/sidebar/sidebar.component.scss",
      "content": ".sidebar { position: fixed; top: 0; right: -250px; width: 250px; height: 100%; background-color: #f1f1f1; transition: right 0.3s ease-in-out; padding: 20px; box-sizing: border-box; /* blur */ background-color: #00000073; backdrop-filter: blur(20px); -webkit-backdrop-filter: blur(20px); box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border-radius: 8px; } .sidebar.open { right: 0; } button { display: block; width: 100%; padding: 10px; margin-bottom: 10px; background-color: #4CAF50; color: white; border: none; cursor: pointer; } .close-btn { position: absolute; top: 10px; right: 10px; width: 30px; height: 30px; padding: 0; font-size: 20px; background-color: #f44336; border-radius: 50%; } .container-lead{ padding: 40px 0px; }"
    },
    {
      "path": "src/app/Core/Components/sidebar/sidebar.component.ts",
      "content": "import { Component, OnInit, OnDestroy } from '@angular/core'; import { CommonModule } from '@angular/common'; import { RouterLink, RouterLinkActive } from '@angular/router'; import { MatIconModule } from '@angular/material/icon'; import { SidebarService } from '../../../Services/sidebar.service.ts/sidebar.service'; import { Subscription, Subject } from 'rxjs'; import { takeUntil } from 'rxjs/operators'; @Component({ selector: 'app-sidebar', standalone: true, imports: [CommonModule, RouterLink, RouterLinkActive, MatIconModule], templateUrl: './sidebar.component.html', styleUrls: ['./sidebar.component.scss'], }) export class SidebarComponent implements OnInit, OnDestroy { isOpen = false; // Controla el estado abierto/cerrado del sidebar private destroy$ = new Subject<void>(); // Utilizado para manejar la desuscripción constructor(private sidebarService: SidebarService) {} ngOnInit(): void { // Suscribirse al estado del sidebar y actualizar 'isOpen' cuando cambie this.sidebarService.sidebarOpen$ .pipe(takeUntil(this.destroy$)) // Desuscribirse automáticamente cuando se destruya el componente .subscribe((isOpen) => { this.isOpen = isOpen; }); } ngOnDestroy(): void { // Emitir para cerrar las suscripciones this.destroy$.next(); this.destroy$.complete(); } // Método para cerrar el sidebar onClose(): void { this.sidebarService.closeSidebar(); } } "
    },
    {
      "path": "src/app/Core/Models/slide.model.ts",
      "content": "export interface Slide { type: 'regular' | 'custom1' | 'custom2'; imageUrl?: string; content?: string; // Nueva propiedad para la duración en milisegundos duration?: number; } "
    },
    {
      "path": "src/app/Core/Pages/buscador/buscador.component.html",
      "content": "<mat-card class=\"buscador-container\"> <mat-card-header > <mat-card-title class=\"title\"> <p>Inicio</p> <p>/</p> {{name}} </mat-card-title> </mat-card-header> <div class=\"search-bar\"> <mat-form-field appearance=\"outline\" class=\"search-field\"> <mat-label>Buscar...</mat-label> <input matInput type=\"text\" placeholder=\"Buscar...\" /> </mat-form-field> <button mat-fab class=\"search-button\"> <mat-icon>search</mat-icon> </button> </div> <div class=\"recomendaciones\"> <mat-card-subtitle>Recomendados según tu modelo de madurez tecnológico:</mat-card-subtitle> <div class=\"recomendacion-box\"> <div class=\"recomendacion\" *ngFor=\"let recomendacion of recomendaciones\"> <app-article-card [title]=\"recomendacion.title\" [description]=\"recomendacion.description\"> </app-article-card> </div> </div> </div> <h2>Resultados de búsqueda:</h2> <div class=\"resultado\" *ngFor=\"let resultado of items\"> <mat-card> <mat-card-header> <mat-card-title>Resultado de búsqueda {{ resultado.id }}</mat-card-title> </mat-card-header> <mat-card-content> <p>{{ resultado.description }}</p> </mat-card-content> </mat-card> </div> <button mat-raised-button color=\"primary\" class=\"listar-todos\">Listar todos los de la categoría</button> </mat-card> "
    },
    {
      "path": "src/app/Core/Pages/buscador/buscador.component.scss",
      "content": ".buscador-container { padding: 20px; background-color: var(--background-color-blur); color: var(--text-color); margin: 20px; border-radius: 8px; backdrop-filter: blur(17px); -webkit-backdrop-filter: blur(17px); box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3); .title { color: var(--primary-color); font-size: 28px; font-weight: 600; display: flex; gap: 8px; } .search-bar { display: flex; align-items: center; margin-bottom: 20px; place-self: center; .search-field { flex: 1; margin-right: 10px; } .search-button { background-color: var(--primary-color); color: white; margin-top: -20px; } } .recomendaciones { display: grid; align-items: center; overflow: hidden; margin: 0px 0px; .recomendacion-box{ text-align: -webkit-center; display: ruby; } mat-card-subtitle{ max-width: 80vw; font-weight: 600; color: var(--text-color); } .recomendacion { margin: 0 0; // Aumentar margen lateral flex: 0 0 auto; } .prev-button, .next-button { background-color: transparent; border: none; cursor: pointer; font-size: 24px; } } h2 { margin-top: 20px; font-size: 20px; } .resultado { margin: 10px 0; border-top: 1px solid #ccc; padding: 10px 0; mat-card { margin-bottom: 10px; } } .listar-todos { margin-top: 20px; } /* Estilos Responsivos */ @media (max-width: 768px) { padding: 10px; margin: 10px; .title { font-size: 24px; // Tamaño de fuente más pequeño en pantallas pequeñas } .search-bar { flex-direction: row; // Cambiar a columna en pantallas pequeñas align-items: stretch; gap: 8px; .search-field { margin-right: 0; margin-bottom: 10px; // Espacio entre campo de búsqueda y botón } .search-button { margin-top: 0px; } } .recomendaciones { flex-direction: column; // Cambiar a columna en pantallas pequeñas .recomendacion { margin: 0 0; // Espacio vertical entre recomendaciones } .recomendacion-box{ display: ruby; } } h2 { font-size: 18px; // Tamaño de fuente más pequeño en pantallas pequeñas } .resultado { padding: 5px 0; // Menos padding en pantallas pequeñas } .listar-todos { font-size: 14px; // Tamaño de fuente más pequeño para el botón } } @media (max-width: 480px) { padding: 8px; margin: -8px; .title { font-size: 1em; // Tamaño de fuente más pequeño en pantallas muy pequeñas } .search-bar { .search-button { font-size: 14px; // Tamaño de fuente más pequeño para el botón } } h2 { font-size: 16px; // Tamaño de fuente más pequeño en pantallas muy pequeñas } .recomendaciones{ display: grid; .recomendacion-box{ display: ruby; text-align: start; } .recomendacion{ margin: 0 0; } } } } "
    },
    {
      "path": "src/app/Core/Pages/buscador/buscador.component.spec.ts",
      "content": "import { ComponentFixture, TestBed } from '@angular/core/testing'; import { BuscadorComponent } from './buscador.component'; describe('BuscadorComponent', () => { let component: BuscadorComponent; let fixture: ComponentFixture<BuscadorComponent>; beforeEach(async () => { await TestBed.configureTestingModule({ imports: [BuscadorComponent] }) .compileComponents(); fixture = TestBed.createComponent(BuscadorComponent); component = fixture.componentInstance; fixture.detectChanges(); }); it('should create', () => { expect(component).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Core/Pages/buscador/buscador.component.ts",
      "content": "import { CommonModule } from '@angular/common'; import { Component, OnInit, OnDestroy } from '@angular/core'; import { MatIconModule } from '@angular/material/icon'; import { ActivatedRoute } from '@angular/router'; import { Subject } from 'rxjs'; import { takeUntil } from 'rxjs/operators'; import {MatCardModule} from '@angular/material/card'; import { MatButtonModule } from '@angular/material/button'; import { MatFormFieldModule } from '@angular/material/form-field'; import { MatInputModule } from '@angular/material/input'; import { MatDividerModule } from '@angular/material/divider'; import { MatListModule } from '@angular/material/list'; import { MatExpansionModule } from '@angular/material/expansion'; import { ArticleCardComponent } from '../../Components/article-card/article-card.component'; @Component({ selector: 'app-buscador', standalone: true, imports: [ MatIconModule, CommonModule, MatCardModule, MatButtonModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDividerModule, MatListModule, MatExpansionModule, MatInputModule, ArticleCardComponent ], templateUrl: './buscador.component.html', styleUrl: './buscador.component.scss' }) export class BuscadorComponent implements OnInit { entityType: string = ''; name: string = ''; items: any[] = []; // Define el tipo según tus datos recomendaciones: any[] = [] private unsubscribe$ = new Subject<void>(); constructor(private route: ActivatedRoute) {} ngOnInit(): void { // Obtener el tipo de entidad desde los datos de la ruta this.route.data .pipe(takeUntil(this.unsubscribe$)) .subscribe(data => { this.entityType = data['entityType'] || ''; this.name = data['name'] || ''; this.getData() }); } ngOnDestroy(): void { this.unsubscribe$.next(); this.unsubscribe$.complete(); } getData(){ this.recomendaciones = [ { title: 'Recomendación 1', description: 'Descripción de la recomendación 1' }, { title: 'Recomendación 2', description: 'Descripción de la recomendación 2' }, { title: 'Recomendación 3', description: 'Descripción de la recomendación 3' } ]; this.items = [ { id: 1, description: 'Resultado de búsqueda 1' }, { id: 2, description: 'Resultado de búsqueda 2' }, { id: 3, description: 'Resultado de búsqueda 3' } ]; } } "
    },
    {
      "path": "src/app/Core/Pages/buscador-detalle/buscador-detalle.component.html",
      "content": "<p>buscador-detalle works!</p> <h4>{{entityType}}</h4> <h4>{{id}}</h4>"
    },
    {
      "path": "src/app/Core/Pages/buscador-detalle/buscador-detalle.component.scss",
      "content": ""
    },
    {
      "path": "src/app/Core/Pages/buscador-detalle/buscador-detalle.component.spec.ts",
      "content": "import { ComponentFixture, TestBed } from '@angular/core/testing'; import { BuscadorDetalleComponent } from './buscador-detalle.component'; describe('BuscadorDetalleComponent', () => { let component: BuscadorDetalleComponent; let fixture: ComponentFixture<BuscadorDetalleComponent>; beforeEach(async () => { await TestBed.configureTestingModule({ imports: [BuscadorDetalleComponent] }) .compileComponents(); fixture = TestBed.createComponent(BuscadorDetalleComponent); component = fixture.componentInstance; fixture.detectChanges(); }); it('should create', () => { expect(component).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Core/Pages/buscador-detalle/buscador-detalle.component.ts",
      "content": "import { Component, OnInit, OnDestroy } from '@angular/core'; import { ActivatedRoute } from '@angular/router'; import { Subject } from 'rxjs'; import { takeUntil } from 'rxjs/operators'; @Component({ selector: 'app-buscador-detalle', standalone: true, imports: [], templateUrl: './buscador-detalle.component.html', styleUrl: './buscador-detalle.component.scss' }) export class BuscadorDetalleComponent implements OnInit, OnDestroy { entityType: string = ''; id: string = ''; itemDetails: any; // Define el tipo según tus datos private unsubscribe$ = new Subject<void>(); constructor(private route: ActivatedRoute) {} ngOnInit(): void { // Obtener el tipo de entidad desde los datos de la ruta this.route.data .pipe(takeUntil(this.unsubscribe$)) .subscribe(data => { this.entityType = data['entityType'] || ''; this.loadDetail(); }); // Obtener el ID desde los parámetros de la ruta this.route.paramMap .pipe(takeUntil(this.unsubscribe$)) .subscribe(params => { this.id = params.get('id') || ''; this.loadDetail(); }); } loadDetail(): void { if (this.entityType && this.id) { switch(this.entityType) { case 'cursos': // Implementa la lógica para cargar detalle del curso con ID 'this.id' this.itemDetails = { /* datos del curso */ }; break; case 'articulos': // Implementa la lógica para cargar detalle del artículo con ID 'this.id' this.itemDetails = { /* datos del artículo */ }; break; case 'proveedores': // Implementa la lógica para cargar detalle del proveedor con ID 'this.id' this.itemDetails = { /* datos del proveedor */ }; break; case 'casos-exito': // Implementa la lógica para cargar detalle del caso de éxito con ID 'this.id' this.itemDetails = { /* datos del caso de éxito */ }; break; case 'financiamiento-empleo': // Implementa la lógica para cargar detalle de financiamiento-empleo con ID 'this.id' this.itemDetails = { /* datos de financiamiento-empleo */ }; break; default: this.itemDetails = null; } } } ngOnDestroy(): void { this.unsubscribe$.next(); this.unsubscribe$.complete(); } } "
    },
    {
      "path": "src/app/Core/Pages/home/home.component.html",
      "content": "<div class=\"home-page\"> <app-navbar></app-navbar> <div class=\"content\"> <router-outlet></router-outlet> <!-- Aquí se cargarán las rutas hijas --> </div> <app-sidebar (close)=\"closeSidebar()\"></app-sidebar> </div>"
    },
    {
      "path": "src/app/Core/Pages/home/home.component.scss",
      "content": ".home-page { display: flex; flex-direction: column; min-height: 100vh; background-image: url('/assets/img-fondo.png'); background-repeat: no-repeat; background-position: center; background-size: cover; } .content { flex: 1; padding: 20px; }"
    },
    {
      "path": "src/app/Core/Pages/home/home.component.spec.ts",
      "content": "import { ComponentFixture, TestBed } from '@angular/core/testing'; import { HomeComponent } from './home.component'; describe('HomeComponent', () => { let component: HomeComponent; let fixture: ComponentFixture<HomeComponent>; beforeEach(async () => { await TestBed.configureTestingModule({ imports: [HomeComponent] }) .compileComponents(); fixture = TestBed.createComponent(HomeComponent); component = fixture.componentInstance; fixture.detectChanges(); }); it('should create', () => { expect(component).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Core/Pages/home/home.component.ts",
      "content": "// src/app/Core/Pages/home/home.component.ts import { Component } from '@angular/core'; import { NavbarComponent } from '../../Components/navbar/navbar.component'; import { SidebarComponent } from '../../Components/sidebar/sidebar.component'; import { CommonModule } from '@angular/common'; import { RouterOutlet } from '@angular/router'; import { SidebarService } from '../../../Services/sidebar.service.ts/sidebar.service'; @Component({ selector: 'app-home', standalone: true, imports: [CommonModule, NavbarComponent, SidebarComponent, RouterOutlet], templateUrl: './home.component.html', styleUrls: ['./home.component.scss'], }) export class HomeComponent { constructor(private sidebarService: SidebarService) {} closeSidebar(): void { this.sidebarService.closeSidebar(); } } "
    },
    {
      "path": "src/app/Core/Pages/landingPage/landingPage.component.html",
      "content": "<!-- src/app/landing-page/landingPage.component.html --> <div class=\"hero\"> <app-carousel [slides]=\"mySlides\" [showIndicators]=\"true\" [showArrows]=\"false\"></app-carousel> </div> <div class=\"articles-container\"> <app-article-card *ngFor=\"let article of articles\" [title]=\"article.title\" [description]=\"article.description\"> </app-article-card> </div> "
    },
    {
      "path": "src/app/Core/Pages/landingPage/landingPage.component.scss",
      "content": ".landing-page { display: flex; flex-direction: column; min-height: 100vh; } .content { flex: 1; padding: 20px; } .hero { text-align: center; margin-bottom: 40px; } .hero h1 { font-size: 24px; margin-bottom: 20px; } .carousel { position: relative; width: 100%; height: 500px; overflow: hidden; } .carousel img { position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; opacity: 0; transition: opacity 0.5s ease-in-out; } .carousel img.active { opacity: 1; } .arrow { position: absolute; top: 50%; transform: translateY(-50%); background-color: rgba(0, 0, 0, 0.5); color: white; border: none; padding: 10px 15px; font-size: 20px; cursor: pointer; transition: background-color 0.3s; } .arrow:hover { background-color: rgba(0, 0, 0, 0.8); } .arrow.left { left: 10px; } .arrow.right { right: 10px; } .articles { display: flex; justify-content: space-between; flex-wrap: wrap; margin-top: 40px; } .article { width: calc(33.33% - 20px); margin-bottom: 20px; } @media (max-width: 768px) { .article { width: 100%; } } "
    },
    {
      "path": "src/app/Core/Pages/landingPage/landingPage.component.ts",
      "content": "// src/app/landing-page/landing-page.component.ts import { Component } from '@angular/core'; import { CommonModule } from '@angular/common'; import { CarouselComponent } from '../../Components/carousel/carousel.component'; import { Slide} from '../../Models/slide.model'; import { ArticleCardComponent } from '../../Components/article-card/article-card.component'; @Component({ selector: 'app-landing-page', standalone: true, imports: [CommonModule, CarouselComponent, ArticleCardComponent], templateUrl: './landingPage.component.html', styleUrls: ['./landingPage.component.scss'] }) export class LandingPageComponent { mySlides: Slide[] = [ { type: 'custom2', duration: 5000 // 5 segundos }, { type: 'custom1', duration: 8000 // 8 segundos }, { type: 'regular', content: '<h3>Slide 1</h3><p>Contenido del Slide 1</p>', duration: 3000 // 3 segundos }, { type: 'regular', imageUrl: 'assets/img-fondo.png', content: '<h3>Slide 4</h3><p>Contenido del Slide 4</p>' // Sin duración específica, usará defaultDuration (5000 ms) } ]; articles = [ { title: 'Artículo 1', description: 'Esta es la descripción del artículo 1. Proporciona una visión general del contenido.' }, { title: 'Artículo 2', description: 'Esta es la descripción del artículo 2. Ofrece detalles adicionales sobre el tema.' }, { title: 'Artículo 3', description: 'Esta es la descripción del artículo 3. Contiene información relevante y útil.' } ]; } "
    },
    {
      "path": "src/app/Core/Pages/login/login.component.html",
      "content": "<!-- login.component.html --> <div class=\"login-container\"> <mat-card class=\"login-card\"> <div class=\"login-content\"> <!-- Logo y Nombre de la Empresa --> <div class=\"logo-container\"> <mat-icon>diamond</mat-icon> <h2>NuevoLosLagos</h2> </div> <!-- Formulario --> <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"form-container\"> <mat-form-field appearance=\"outline\" class=\"full-width\"> <mat-label>Correo</mat-label> <input matInput type=\"email\" formControlName=\"email\" required /> <mat-error *ngIf=\"loginForm.get('email')?.hasError('required')\"> El correo es obligatorio. </mat-error> <mat-error *ngIf=\"loginForm.get('email')?.hasError('email')\"> Por favor, ingresa un correo válido. </mat-error> </mat-form-field> <mat-form-field appearance=\"outline\" class=\"full-width\"> <mat-label>Contraseña</mat-label> <input matInput type=\"password\" formControlName=\"password\" required /> <mat-error *ngIf=\"loginForm.get('password')?.hasError('required')\"> La contraseña es obligatoria. </mat-error> </mat-form-field> <a class=\"forgot-password\" href=\"#\">¿Has olvidado la contraseña?</a> <!-- Mostrar mensaje de error si existe --> <div *ngIf=\"errorMessage\" class=\"error-message\"> {{ errorMessage }} </div> </form> </div> <div class=\"buttons-general\"> <button mat-button class=\"btn-secondary\" routerLink=\"/\">Volver</button> <div class=\"button-container\"> <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"isLoading\" (click)=\"onSubmit()\"> Crear cuenta </button> <button mat-flat-button color=\"accent\" type=\"submit\" [disabled]=\"isLoading\" (click)=\"onSubmit()\"> Acceder </button> </div> <!-- Spinner de carga --> <mat-progress-spinner *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-spinner> </div> </mat-card> </div> "
    },
    {
      "path": "src/app/Core/Pages/login/login.component.scss",
      "content": "/* login.component.scss */ .login-container { display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f5f5f5; } .login-card { padding: 40px; border-radius: 20px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); background: linear-gradient(to bottom, #ffffff, #dcdcdc); max-width: 650px; width: 100%; transition: all 0.3s ease-in-out; @media (max-width: 768px) { padding: 20px; } @media (max-width: 480px) { padding: 15px; } .login-content { display: flex; justify-content: space-between; align-items: center; @media (max-width: 768px) { flex-direction: column; align-items: center; } } .logo-container { display: flex; flex-direction: column; align-items: center; text-align: center; margin-right: 40px; mat-icon { font-size: 60px; margin-bottom: 10px; color: #3f51b5; /* Opcional: color del icono */ } h2 { font-size: 24px; font-weight: bold; color: #333; @media (max-width: 480px) { font-size: 20px; } } } .form-container { flex-grow: 1; display: flex; flex-direction: column; max-width: 320px; .full-width { width: 100%; } .forgot-password { display: block; margin-bottom: 20px; font-size: 14px; text-align: right; color: #607d8b; text-decoration: none; @media (max-width: 480px) { font-size: 12px; text-align: center; } &:hover { text-decoration: underline; } } .error-message { color: red; margin-top: 10px; text-align: center; } } .buttons-general { display: flex; justify-content: space-between; align-items: center; margin-top: 20px; .btn-secondary { color: black; border: 1px solid #cccccc; } .button-container { display: flex; justify-content: space-between; gap: 24px; button { min-width: 100px; } @media (max-width: 480px) { flex-direction: column; align-items: center; gap: 10px; button { width: 100%; } } } mat-progress-spinner { margin-left: 20px; } } } "
    },
    {
      "path": "src/app/Core/Pages/login/login.component.spec.ts",
      "content": "import { ComponentFixture, TestBed } from '@angular/core/testing'; import { LoginComponent } from './login.component'; describe('LoginComponent', () => { let component: LoginComponent; let fixture: ComponentFixture<LoginComponent>; beforeEach(async () => { await TestBed.configureTestingModule({ imports: [LoginComponent] }) .compileComponents(); fixture = TestBed.createComponent(LoginComponent); component = fixture.componentInstance; fixture.detectChanges(); }); it('should create', () => { expect(component).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Core/Pages/login/login.component.ts",
      "content": "// login.component.ts import { Component, OnInit } from '@angular/core'; import { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms'; import { GeneralService } from '../../../Services/general.service'; import { Router } from '@angular/router'; import { CommonModule } from '@angular/common'; import { MatCardModule } from '@angular/material/card'; import { MatFormFieldModule } from '@angular/material/form-field'; import { MatInputModule } from '@angular/material/input'; import { MatButtonModule } from '@angular/material/button'; import { MatIconModule } from '@angular/material/icon'; import { MatProgressSpinnerModule } from '@angular/material/progress-spinner'; // Para el spinner @Component({ selector: 'app-login', standalone: true, imports: [ CommonModule, MatCardModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatIconModule, ReactiveFormsModule, MatProgressSpinnerModule ], templateUrl: './login.component.html', styleUrls: ['./login.component.scss'] }) export class LoginComponent implements OnInit { loginForm: FormGroup; isLoading = false; errorMessage: string = ''; constructor( private fb: FormBuilder, private generalService: GeneralService, private router: Router ) { this.loginForm = this.fb.group({ email: ['', [Validators.required, Validators.email]], password: ['', [Validators.required]] }); } ngOnInit(): void {} onSubmit() { if (this.loginForm.invalid) { return; } this.isLoading = true; this.errorMessage = ''; const { email, password } = this.loginForm.value; // Usar el método de login simulado this.generalService.mockLogin({ email, password }) .subscribe({ next: (response: { token: any; }) => { const token = response.token; if (token) { localStorage.setItem('authToken', token); this.router.navigate(['/']); } else { this.errorMessage = 'Token no recibido del servidor.'; } this.isLoading = false; }, error: (error: string) => { this.errorMessage = error; this.isLoading = false; } }); } } "
    },
    {
      "path": "src/app/Core/Pages/modelo/modelo.component.html",
      "content": "<p>modelo works!</p> "
    },
    {
      "path": "src/app/Core/Pages/modelo/modelo.component.scss",
      "content": ""
    },
    {
      "path": "src/app/Core/Pages/modelo/modelo.component.spec.ts",
      "content": "import { ComponentFixture, TestBed } from '@angular/core/testing'; import { ModeloComponent } from './modelo.component'; describe('ModeloComponent', () => { let component: ModeloComponent; let fixture: ComponentFixture<ModeloComponent>; beforeEach(async () => { await TestBed.configureTestingModule({ imports: [ModeloComponent] }) .compileComponents(); fixture = TestBed.createComponent(ModeloComponent); component = fixture.componentInstance; fixture.detectChanges(); }); it('should create', () => { expect(component).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Core/Pages/modelo/modelo.component.ts",
      "content": "import { Component } from '@angular/core'; @Component({ selector: 'app-modelo', standalone: true, imports: [], templateUrl: './modelo.component.html', styleUrl: './modelo.component.scss' }) export class ModeloComponent { } "
    },
    {
      "path": "src/app/Core/Pages/quienesSomos/quienesSomos.component.html",
      "content": "<mat-card class=\"quienes-somos-container\"> <mat-card-header> <mat-card-title class=\"title\">Plataforma Inteligente Nuevo Los Lagos</mat-card-title> <mat-card-subtitle class=\"subtitle\"> Fortalecimiento del ecosistema de Manufactura Avanzada e i4.0 </mat-card-subtitle> </mat-card-header> <mat-card-content> <section class=\"section\"> <h2>¿Qué es Nuevo Los Lagos?</h2> <p> El proyecto \"Nuevo Los Lagos\", actualmente en desarrollo, es una colaboración entre la Universidad Santo Tomás, Asimet y Grupo Centinela, con financiamiento de Corfo Los Lagos. Esta plataforma web, concebida como un bien público, está diseñada para transformarse en un recurso esencial para la región con las siguientes características: </p> <mat-expansion-panel> <mat-expansion-panel-header> <mat-panel-title> A) Educación y Actualización Profesional </mat-panel-title> </mat-expansion-panel-header> <p> La plataforma ofrecerá una selección de cursos especializados destinados a satisfacer las necesidades de la industria y la manufactura, facilitando el acceso a formación continua y de calidad para profesionales y técnicos del área. </p> </mat-expansion-panel> <mat-expansion-panel> <mat-expansion-panel-header> <mat-panel-title> B) Buscador de Proveedores Basado en IA </mat-panel-title> </mat-expansion-panel-header> <p> Incorporará un sistema de búsqueda inteligente para conectar empresas con proveedores, optimizando la cadena de suministro regional mediante el uso de tecnologías de inteligencia artificial. </p> </mat-expansion-panel> <p> \"Nuevo Los Lagos\" se perfila como una herramienta clave en el fortalecimiento de la infraestructura industrial y profesional de la región, promoviendo el desarrollo económico y la innovación. </p> </section> <mat-divider></mat-divider> <section class=\"section\"> <h2>Objetivos</h2> <h3>General</h3> <p> La convocatoria tiene por objetivo apoyar iniciativas que contribuyan a propiciar el desarrollo y/o fortalecimiento en la región del sector manufactura avanzada, a través del desarrollo de bienes públicos que aborden una o más brechas identificadas, lo que contribuirá a resolver fallas de mercado, con la finalidad de fortalecer la competitividad, diversificar la economía y/o aumentar la productividad en la Región de Los Lagos. </p> <h3>Específicos:</h3> <mat-list> <mat-list-item> <mat-icon matListIcon>check_circle</mat-icon> <span> <strong>A)</strong> Desarrollar un bien público que permita crear y/o mejorar las condiciones del entorno para la mejora competitiva de los sectores productivos de la Región de Los Lagos en el marco de la manufactura avanzada, a través de la generación de plataformas de gestión, generación de normas, metodologías y/o herramientas de aplicación productiva, y el levantamiento y sistematización de información relevante que apoye la toma de decisiones, que mejore la coordinación público-privada. </span> </mat-list-item> <mat-list-item> <mat-icon matListIcon>check_circle</mat-icon> <span> <strong>B)</strong> Fortalecer capacidades y programas de educación en el ámbito de la manufactura avanzada. </span> </mat-list-item> <mat-list-item> <mat-icon matListIcon>check_circle</mat-icon> <span> <strong>C)</strong> Fortalecer la Institucionalidad, gobernanza, y la organización y coordinación intersectorial, y a nivel de servicios públicos, en el ámbito de la manufactura avanzada. </span> </mat-list-item> </mat-list> </section> <mat-divider></mat-divider> <section class=\"section\"> <h2>Organización</h2> <mat-list> <mat-list-item> <mat-icon matListIcon>business</mat-icon> <span> <strong>ASIMET</strong> - Mandante: Entidad interesada en el desarrollo del proyecto, que tiene como rol supervisar el funcionamiento del mismo. </span> </mat-list-item> <mat-list-item> <mat-icon matListIcon>school</mat-icon> <span> <strong>Universidad Santo Tomás</strong> - Beneficiario: Es la entidad que presenta el proyecto y es responsable del subsidio a recibir. </span> </mat-list-item> <mat-list-item> <mat-icon matListIcon>group</mat-icon> <span> <strong>Grupo Centinela</strong> - Co-ejecutor: Es una entidad que cuenta con experiencia en la temática del programa. </span> </mat-list-item> </mat-list> </section> </mat-card-content> </mat-card> "
    },
    {
      "path": "src/app/Core/Pages/quienesSomos/quienesSomos.component.scss",
      "content": ".quienes-somos-container { background-color: var(--background-color-blur); color: var(--text-color); margin: 20px; padding: 20px; border-radius: 8px; backdrop-filter: blur(17px); -webkit-backdrop-filter: blur(17px); box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3); .title { color: var(--primary-color); font-size: 28px; font-weight: 600; } .subtitle { color: var(--secondary-color); font-size: 18px; margin-top: 4px; } .section { margin-top: 20px; h2 { color: var(--primary-color); font-size: 24px; margin-bottom: 10px; } h3 { color: var(--secondary-color); font-size: 20px; margin-top: 15px; margin-bottom: 8px; } p { margin-bottom: 16px; line-height: 1.6; } mat-list-item { align-items: start; mat-icon { color: var(--primary-color); margin-top: 4px; } span { font-size: 16px; } } } mat-divider { margin: 20px 0; border-color: var(--secondary-color); } mat-expansion-panel { background-color: var(--card-background); color: var(--text-color); margin-bottom: 10px; .mat-expansion-panel-header { background-color: var(--primary-color); color: #fff; } .mat-expansion-panel-content { background-color: var(--background-color); } p { padding: 10px 0; } } } mat-panel-title{ color: var(--text-backgroud-color) }"
    },
    {
      "path": "src/app/Core/Pages/quienesSomos/quienesSomos.component.ts",
      "content": "import { Component } from '@angular/core'; import { CommonModule } from '@angular/common'; import { MatCardModule } from '@angular/material/card'; import { MatDividerModule } from '@angular/material/divider'; import { MatIconModule } from '@angular/material/icon'; import { MatListModule } from '@angular/material/list'; import { MatExpansionModule } from '@angular/material/expansion'; @Component({ selector: 'app-quienes-somos', standalone: true, imports: [ CommonModule, MatCardModule, MatDividerModule, MatIconModule, MatListModule, MatExpansionModule ], templateUrl: './quienesSomos.component.html', styleUrls: ['./quienesSomos.component.scss'] }) export class QuienesSomosComponent { // Puedes agregar lógica del componente aquí si es necesario } "
    },
    {
      "path": "src/app/Core/Pages/registro/registro.component.html",
      "content": "<div class=\"registro-container\"> <div class=\"crear-cuenta-container\"> <div class=\"header\"> <mat-icon>diamond</mat-icon> <h2>NuevoLosLagos</h2> <h3>Crear nueva cuenta</h3> </div> <div class=\"card-container\"> <mat-card class=\"account-card\"> <mat-card-title>Crear cuenta para Proveedores</mat-card-title> <mat-card-content> <p>Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type.</p> </mat-card-content> </mat-card> <mat-card class=\"account-card\"> <mat-card-title>Crear cuenta para Empresas de los lagos</mat-card-title> <mat-card-content> <p>Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type.</p> </mat-card-content> </mat-card> <mat-card class=\"account-card\"> <mat-card-title>Crear cuenta Personal</mat-card-title> <mat-card-content> <p>Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type.</p> </mat-card-content> </mat-card> </div> </div> </div>"
    },
    {
      "path": "src/app/Core/Pages/registro/registro.component.scss",
      "content": ".crear-cuenta-container { text-align: center; padding: 40px; background-color: #f5f5f5; border-radius: 20px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); max-width: 1000px; margin: 0 auto; .header { display: flex; align-items: center; justify-content: center; margin-bottom: 30px; mat-icon { font-size: 40px; margin-right: 10px; } h2 { font-size: 24px; font-weight: bold; margin: 0; margin-right: 20px; } h3 { font-size: 20px; margin: 0; } } .card-container { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; @media (max-width: 1024px) { grid-template-columns: repeat(2, 1fr); } @media (max-width: 768px) { grid-template-columns: 1fr; } .account-card { padding: 20px; border-radius: 20px; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); background: linear-gradient(to bottom, #ffffff, #dcdcdc); mat-card-title { font-size: 18px; font-weight: bold; } mat-card-content { p { font-size: 14px; color: #333; } } } } } .registro-container { display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f5f5f5; }"
    },
    {
      "path": "src/app/Core/Pages/registro/registro.component.spec.ts",
      "content": "import { ComponentFixture, TestBed } from '@angular/core/testing'; import { RegistroComponent } from './registro.component'; describe('RegistroComponent', () => { let component: RegistroComponent; let fixture: ComponentFixture<RegistroComponent>; beforeEach(async () => { await TestBed.configureTestingModule({ imports: [RegistroComponent] }) .compileComponents(); fixture = TestBed.createComponent(RegistroComponent); component = fixture.componentInstance; fixture.detectChanges(); }); it('should create', () => { expect(component).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Core/Pages/registro/registro.component.ts",
      "content": "import { Component } from '@angular/core'; import { MatCardModule } from '@angular/material/card'; import { MatIconModule } from '@angular/material/icon'; import { CommonModule } from '@angular/common'; @Component({ selector: 'app-registro', standalone: true, imports: [CommonModule, MatCardModule, MatIconModule], templateUrl: './registro.component.html', styleUrls: ['./registro.component.scss'] }) export class RegistroComponent { }"
    },
    {
      "path": "src/app/Services/general.service.spec.ts",
      "content": "import { TestBed } from '@angular/core/testing'; import { GeneralService } from './general.service'; describe('GeneralService', () => { let service: GeneralService; beforeEach(() => { TestBed.configureTestingModule({}); service = TestBed.inject(GeneralService); }); it('should be created', () => { expect(service).toBeTruthy(); }); }); "
    },
    {
      "path": "src/app/Services/general.service.ts",
      "content": "// general.service.ts import { Injectable } from '@angular/core'; import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'; import { Observable, throwError, of } from 'rxjs'; import { catchError, delay } from 'rxjs/operators'; @Injectable({ providedIn: 'root' }) export class GeneralService { private apiUrl = 'http://localhost:3000/api'; // URL base de tu API private httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' // Puedes añadir más cabeceras si es necesario }) }; constructor(private http: HttpClient) { } private handleError(error: HttpErrorResponse) { if (error.error instanceof ErrorEvent) { console.error('Ocurrió un error:', error.error.message); } else { console.error( `Backend retornó código ${error.status}, ` + `cuerpo del error: ${error.error}`); } return throwError( 'Algo salió mal; por favor, intenta de nuevo más tarde.'); } getData(endpoint: string): Observable<any> { return this.http.get<any>(`${this.apiUrl}/${endpoint}`, this.httpOptions) .pipe( catchError(this.handleError) ); } postData(endpoint: string, data: any): Observable<any> { return this.http.post<any>(`${this.apiUrl}/${endpoint}`, data, this.httpOptions) .pipe( catchError(this.handleError) ); } updateData(endpoint: string, id: number | string, data: any): Observable<any> { return this.http.put<any>(`${this.apiUrl}/${endpoint}/${id}`, data, this.httpOptions) .pipe( catchError(this.handleError) ); } deleteData(endpoint: string, id: number | string): Observable<any> { return this.http.delete<any>(`${this.apiUrl}/${endpoint}/${id}`, this.httpOptions) .pipe( catchError(this.handleError) ); } // Método de login real login(data: any): Observable<any> { return this.postData('login', data); } // Método de login simulado mockLogin(data: any): Observable<any> { // Simula una validación de credenciales const { email, password } = data; if (email === 'test@example.com' && password === 'password') { // Simula un token JWT const simulatedToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'; return of({ token: simulatedToken }).pipe( delay(1000) // Simula un retardo de 1 segundo ); } else { return throwError('Credenciales inválidas').pipe( delay(1000) // Simula un retardo de 1 segundo ); } } } "
    },
    {
      "path": "src/app/Services/sidebar.service.ts/sidebar.service.ts",
      "content": "import { Injectable } from '@angular/core'; import { BehaviorSubject, Observable } from 'rxjs'; @Injectable({ providedIn: 'root', // Singleton en toda la aplicación }) export class SidebarService { private sidebarOpenSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false); public sidebarOpen$: Observable<boolean> = this.sidebarOpenSubject.asObservable(); // Observable para escuchar el estado del sidebar constructor() {} // Alternar el estado actual del sidebar (abierto/cerrado) toggleSidebar(): void { this.setSidebarState(!this.sidebarOpenSubject.value); } // Abrir el sidebar openSidebar(): void { this.setSidebarState(true); } // Cerrar el sidebar closeSidebar(): void { this.setSidebarState(false); } // Actualizar el estado del sidebar (true = abierto, false = cerrado) private setSidebarState(isOpen: boolean): void { this.sidebarOpenSubject.next(isOpen); } } "
    },
    {
      "path": "src/app/app.component.html",
      "content": "<router-outlet></router-outlet>"
    },
    {
      "path": "src/app/app.component.scss",
      "content": ""
    },
    {
      "path": "src/app/app.component.ts",
      "content": " import { Component } from '@angular/core'; import { RouterOutlet } from '@angular/router'; @Component({ selector: 'app-root', standalone: true, imports: [RouterOutlet], templateUrl: './app.component.html', styleUrls: ['./app.component.scss'] }) export class AppComponent { title = 'nll-frontend'; } "
    },
    {
      "path": "src/app/app.config.ts",
      "content": "import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core'; import { provideRouter } from '@angular/router'; import { routes } from './app.routes'; export const appConfig: ApplicationConfig = { providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)] }; "
    },
    {
      "path": "src/app/app.routes.ts",
      "content": "import { Routes } from '@angular/router'; import { LandingPageComponent } from './Core/Pages/landingPage/landingPage.component'; import { LoginComponent } from './Core/Pages/login/login.component'; import { RegistroComponent } from './Core/Pages/registro/registro.component'; import { HomeComponent } from './Core/Pages/home/home.component'; import { ModeloComponent } from './Core/Pages/modelo/modelo.component'; import { BuscadorComponent } from './Core/Pages/buscador/buscador.component'; import { BuscadorDetalleComponent } from './Core/Pages/buscador-detalle/buscador-detalle.component'; export const routes: Routes = [ // Rutas que no incluyen el sidebar ni el navbar { path: 'login', component: LoginComponent }, { path: 'registro', component: RegistroComponent }, // Ruta principal que incluye el sidebar y el navbar { path: '', component: HomeComponent, children: [ { path: '', component: LandingPageComponent }, // Página de inicio por defecto { path: 'quienes-somos', loadComponent: () => import('./Core/Pages/quienesSomos/quienesSomos.component').then(m => m.QuienesSomosComponent) }, { path: 'modelo', component: ModeloComponent }, // Rutas para 'cursos' { path: 'cursos', component: BuscadorComponent, data: { entityType: 'cursos', name: 'Cursos' } }, { path: 'cursos/:id', component: BuscadorDetalleComponent, data: { entityType: 'cursos', name: 'Cursos' } }, // Rutas para 'articulos' { path: 'articulos', component: BuscadorComponent, data: { entityType: 'articulos', name: 'Artículos de interés' } }, { path: 'articulos/:id', component: BuscadorDetalleComponent, data: { entityType: 'articulos', name: 'Artículos de interés' } }, // Rutas para 'proveedores' { path: 'proveedores', component: BuscadorComponent, data: { entityType: 'proveedores', name: 'Proveedores' } }, { path: 'proveedores/:id', component: BuscadorDetalleComponent, data: { entityType: 'proveedores', name: 'Proveedores' } }, // Rutas para 'casos-exito' { path: 'casos-exito', component: BuscadorComponent, data: { entityType: 'casos-exito', name: 'Casos de éxito' } }, { path: 'casos-exito/:id', component: BuscadorDetalleComponent, data: { entityType: 'casos-exito', name: 'Casos de éxito' } }, // Rutas para 'financiamiento-empleo' { path: 'financiamiento-empleo', component: BuscadorComponent, data: { entityType: 'financiamiento-empleo', name: 'Financiamiento y empleo' } }, { path: 'financiamiento-empleo/:id', component: BuscadorDetalleComponent, data: { entityType: 'financiamiento-empleo', name: 'Financiamiento y empleo' } }, ], }, // Ruta comodín: redirige cualquier ruta no definida al path por defecto { path: '**', redirectTo: '' }, ]; "
    },
    {
      "path": "src/index.html",
      "content": "<!doctype html> <html lang=\"en\"> <head> <meta charset=\"utf-8\"> <title>NllFrontend</title> <base href=\"/\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\"> <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap\" rel=\"stylesheet\"> <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"> </head> <body class=\"mat-typography\"> <app-root></app-root> </body> </html> "
    },
    {
      "path": "src/main.ts",
      "content": "// main.ts import { bootstrapApplication } from '@angular/platform-browser'; import { AppComponent } from './app/app.component'; import { provideRouter } from '@angular/router'; import { BrowserAnimationsModule } from '@angular/platform-browser/animations'; import { importProvidersFrom, enableProdMode } from '@angular/core'; import { provideHttpClient } from '@angular/common/http'; import { routes } from './app/app.routes'; // Asegúrate de que esta ruta es correcta bootstrapApplication(AppComponent, { providers: [ provideRouter(routes), importProvidersFrom(BrowserAnimationsModule), provideHttpClient(), // Proveer HttpClient aquí ], }).catch(err => console.error(err)); "
    },
    {
      "path": "src/styles.scss",
      "content": "/* src/styles.scss */ /* Estilos globales */ html, body { height: 100%; } body { margin: 0; font-family: Roboto, \"Helvetica Neue\", sans-serif; } :root { /* Colores Primarios */ --primary-color: #006064; --secondary-color: #004d40; /* Colores de Fondo */ --background-color: #e0f7fa; --background-color-blur:#e0f7fa91; --card-background: #ffffff; /* Colores de Texto */ --text-color: #333333; --text-light: #666666; --text-backgroud-color: white; /* Colores de Estado */ --success-color: #4caf50; --error-color: #f44336; --warning-color: #ff9800; } /* Puedes añadir más estilos globales aquí */ "
    },
    {
      "path": "tsconfig.app.json",
      "content": "/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */ /* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */ { \"extends\": \"./tsconfig.json\", \"compilerOptions\": { \"outDir\": \"./out-tsc/app\", \"types\": [] }, \"files\": [ \"src/main.ts\" ], \"include\": [ \"src/**/*.d.ts\" ] } "
    },
    {
      "path": "tsconfig.json",
      "content": "/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */ /* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */ { \"compileOnSave\": false, \"compilerOptions\": { \"outDir\": \"./dist/out-tsc\", \"strict\": true, \"noImplicitOverride\": true, \"noPropertyAccessFromIndexSignature\": true, \"noImplicitReturns\": true, \"noFallthroughCasesInSwitch\": true, \"skipLibCheck\": true, \"isolatedModules\": true, \"esModuleInterop\": true, \"sourceMap\": true, \"declaration\": false, \"experimentalDecorators\": true, \"moduleResolution\": \"bundler\", \"importHelpers\": true, \"target\": \"ES2022\", \"module\": \"ES2022\", \"lib\": [ \"ES2022\", \"dom\" ] }, \"angularCompilerOptions\": { \"enableI18nLegacyMessageIdFormat\": false, \"strictInjectionParameters\": true, \"strictInputAccessModifiers\": true, \"strictTemplates\": true } } "
    },
    {
      "path": "tsconfig.spec.json",
      "content": "/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */ /* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */ { \"extends\": \"./tsconfig.json\", \"compilerOptions\": { \"outDir\": \"./out-tsc/spec\", \"types\": [ \"jasmine\" ] }, \"include\": [ \"src/**/*.spec.ts\", \"src/**/*.d.ts\" ] } "
    }
  ]
}